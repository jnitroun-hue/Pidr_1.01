// üóëÔ∏è –°–ö–†–ò–ü–¢ –î–õ–Ø –£–î–ê–õ–ï–ù–ò–Ø –í–°–ï–• –ö–û–ú–ù–ê–¢ –ß–ï–†–ï–ó API
// –ó–∞–ø—É—Å–∫: node delete-rooms-api.js

const BASE_URL = 'http://localhost:3000'; // –ò–∑–º–µ–Ω–∏ –Ω–∞ —Å–≤–æ–π URL –µ—Å–ª–∏ –Ω—É–∂–Ω–æ

async function deleteAllRooms() {
  try {
    console.log('üîç –ü–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É –∫–æ–º–Ω–∞—Ç...');
    
    // –°–Ω–∞—á–∞–ª–∞ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    const statsResponse = await fetch(`${BASE_URL}/api/admin/delete-all-rooms`);
    const statsData = await statsResponse.json();
    
    if (statsData.success) {
      console.log('üìä –¢–ï–ö–£–©–ê–Ø –°–¢–ê–¢–ò–°–¢–ò–ö–ê:');
      console.log(`   –í—Å–µ–≥–æ –∫–æ–º–Ω–∞—Ç: ${statsData.stats.totalRooms}`);
      console.log(`   –û–∂–∏–¥–∞—é—â–∏—Ö: ${statsData.stats.waitingRooms}`);
      console.log(`   –í –∏–≥—Ä–µ: ${statsData.stats.playingRooms}`);
      console.log(`   –ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö: ${statsData.stats.finishedRooms}`);
      console.log(`   –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤ –≤ –∫–æ–º–Ω–∞—Ç–∞—Ö: ${statsData.stats.totalPlayers}`);
      
      if (statsData.stats.totalRooms === 0) {
        console.log('‚úÖ –ö–æ–º–Ω–∞—Ç—ã —É–∂–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!');
        return;
      }
      
      console.log('\nüóëÔ∏è –£–¥–∞–ª—è–µ–º –í–°–ï –∫–æ–º–Ω–∞—Ç—ã...');
      
      // –£–¥–∞–ª—è–µ–º –≤—Å–µ –∫–æ–º–Ω–∞—Ç—ã
      const deleteResponse = await fetch(`${BASE_URL}/api/admin/delete-all-rooms`, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          confirm: 'DELETE_ALL_ROOMS'
        })
      });
      
      const deleteData = await deleteResponse.json();
      
      if (deleteData.success) {
        console.log('‚úÖ –£–°–ü–ï–®–ù–û –£–î–ê–õ–ï–ù–û:');
        console.log(`   –ö–æ–º–Ω–∞—Ç: ${deleteData.deletedRooms}`);
        console.log(`   –ò–≥—Ä–æ–∫–æ–≤: ${deleteData.deletedPlayers}`);
        console.log('\nüìã –£–¥–∞–ª–µ–Ω–Ω—ã–µ –∫–æ–º–Ω–∞—Ç—ã:');
        deleteData.roomsDeleted.forEach(room => {
          console.log(`   - ${room.room_code}: ${room.name} (${room.status}, ${room.players} –∏–≥—Ä–æ–∫–æ–≤)`);
        });
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', deleteData.message);
      }
    } else {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏:', statsData.message);
    }
    
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞:', error.message);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º
deleteAllRooms();

-- =====================================================
-- UNIFIED MASTER WALLET SCHEMA –¥–ª—è P.I.D.R. GAME
-- –ï–¥–∏–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ—à–µ–ª—å–∫–∞–º–∏ –∏ –ø–ª–∞—Ç–µ–∂–∞–º–∏
-- =====================================================

-- üè¶ –¢–∞–±–ª–∏—Ü–∞ Master –∫–æ—à–µ–ª—å–∫–æ–≤
CREATE TABLE IF NOT EXISTS _pidr_master_wallets (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    network VARCHAR(20) NOT NULL, -- BTC, ETH, TON, USDT_TRC20, USDT_ERC20, SOL
    name VARCHAR(100) NOT NULL,
    address VARCHAR(255) NOT NULL,
    xpub TEXT, -- –î–ª—è HD –∫–æ—à–µ–ª—å–∫–æ–≤
    encrypted_private_key TEXT, -- –ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π –ø—Ä–∏–≤–∞—Ç–Ω—ã–π –∫–ª—é—á (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    derivation_path VARCHAR(50) NOT NULL,
    is_active BOOLEAN DEFAULT true,
    is_hd_wallet BOOLEAN DEFAULT false,
    transaction_count INTEGER DEFAULT 0,
    total_received DECIMAL(36, 18) DEFAULT 0,
    last_used_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    UNIQUE(network, address),
    CONSTRAINT valid_network CHECK (network IN ('BTC', 'ETH', 'TON', 'USDT_TRC20', 'USDT_ERC20', 'SOL'))
);

-- üí≥ –¢–∞–±–ª–∏—Ü–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –∞–¥—Ä–µ—Å–æ–≤
CREATE TABLE IF NOT EXISTS _pidr_user_wallet_addresses (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    network VARCHAR(20) NOT NULL,
    address VARCHAR(255) NOT NULL UNIQUE,
    derivation_index INTEGER, -- –î–ª—è HD –∫–æ—à–µ–ª—å–∫–æ–≤
    master_wallet_id UUID REFERENCES _pidr_master_wallets(id) ON DELETE CASCADE,
    memo VARCHAR(100), -- –£–Ω–∏–∫–∞–ª—å–Ω—ã–π memo –¥–ª—è –ø–ª–∞—Ç–µ–∂–µ–π
    is_active BOOLEAN DEFAULT true,
    balance DECIMAL(36, 18) DEFAULT 0,
    transaction_count INTEGER DEFAULT 0,
    last_checked_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    UNIQUE(user_id, network),
    CONSTRAINT valid_network CHECK (network IN ('BTC', 'ETH', 'TON', 'USDT_TRC20', 'USDT_ERC20', 'SOL'))
);

-- üí∞ –¢–∞–±–ª–∏—Ü–∞ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–π (—Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è)
CREATE TABLE IF NOT EXISTS _pidr_wallet_transactions (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    user_address_id UUID REFERENCES _pidr_user_wallet_addresses(id) ON DELETE CASCADE,
    master_wallet_id UUID REFERENCES _pidr_master_wallets(id) ON DELETE CASCADE,
    
    -- –î–µ—Ç–∞–ª–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
    tx_hash VARCHAR(255), -- –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ –±–ª–æ–∫—á–µ–π–Ω–µ
    network VARCHAR(20) NOT NULL,
    transaction_type VARCHAR(20) NOT NULL, -- deposit, withdrawal, internal_transfer
    status VARCHAR(20) DEFAULT 'pending', -- pending, confirmed, failed, expired
    
    -- –°—É–º–º—ã
    amount DECIMAL(36, 18) NOT NULL,
    fee DECIMAL(36, 18) DEFAULT 0,
    net_amount DECIMAL(36, 18) NOT NULL,
    
    -- –ê–¥—Ä–µ—Å–∞
    from_address VARCHAR(255),
    to_address VARCHAR(255) NOT NULL,
    
    -- –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
    memo VARCHAR(255),
    block_number BIGINT,
    confirmations INTEGER DEFAULT 0,
    required_confirmations INTEGER DEFAULT 1,
    
    -- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    blockchain_time TIMESTAMP WITH TIME ZONE,
    expires_at TIMESTAMP WITH TIME ZONE,
    confirmed_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    CONSTRAINT valid_network CHECK (network IN ('BTC', 'ETH', 'TON', 'USDT_TRC20', 'USDT_ERC20', 'SOL')),
    CONSTRAINT valid_transaction_type CHECK (transaction_type IN ('deposit', 'withdrawal', 'internal_transfer')),
    CONSTRAINT valid_status CHECK (status IN ('pending', 'confirmed', 'failed', 'expired'))
);

-- üìä –¢–∞–±–ª–∏—Ü–∞ –±–∞–ª–∞–Ω—Å–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
CREATE TABLE IF NOT EXISTS _pidr_user_balances (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id VARCHAR(255) NOT NULL,
    network VARCHAR(20) NOT NULL,
    
    -- –ë–∞–ª–∞–Ω—Å—ã
    available_balance DECIMAL(36, 18) DEFAULT 0,
    pending_balance DECIMAL(36, 18) DEFAULT 0,
    total_balance DECIMAL(36, 18) DEFAULT 0,
    
    -- –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    total_deposits DECIMAL(36, 18) DEFAULT 0,
    total_withdrawals DECIMAL(36, 18) DEFAULT 0,
    transaction_count INTEGER DEFAULT 0,
    
    -- –í—Ä–µ–º–µ–Ω–Ω—ã–µ –º–µ—Ç–∫–∏
    last_updated_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    UNIQUE(user_id, network),
    CONSTRAINT valid_network CHECK (network IN ('BTC', 'ETH', 'TON', 'USDT_TRC20', 'USDT_ERC20', 'SOL'))
);

-- üîÑ –¢–∞–±–ª–∏—Ü–∞ –æ–±–º–µ–Ω–Ω—ã—Ö –∫—É—Ä—Å–æ–≤
CREATE TABLE IF NOT EXISTS _pidr_exchange_rates (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    from_currency VARCHAR(20) NOT NULL,
    to_currency VARCHAR(20) NOT NULL,
    rate DECIMAL(18, 8) NOT NULL,
    source VARCHAR(50) NOT NULL, -- coingecko, binance, etc
    is_active BOOLEAN DEFAULT true,
    expires_at TIMESTAMP WITH TIME ZONE,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW(),
    
    UNIQUE(from_currency, to_currency, source)
);

-- üìù –¢–∞–±–ª–∏—Ü–∞ –ª–æ–≥–æ–≤ —Å–∏—Å—Ç–µ–º—ã –∫–æ—à–µ–ª—å–∫–æ–≤
CREATE TABLE IF NOT EXISTS _pidr_wallet_logs (
    id UUID DEFAULT gen_random_uuid() PRIMARY KEY,
    user_id VARCHAR(255),
    action VARCHAR(100) NOT NULL,
    details JSONB,
    ip_address INET,
    user_agent TEXT,
    created_at TIMESTAMP WITH TIME ZONE DEFAULT NOW()
);

-- =====================================================
-- –ò–ù–î–ï–ö–°–´ –î–õ–Ø –û–ü–¢–ò–ú–ò–ó–ê–¶–ò–ò –ü–†–û–ò–ó–í–û–î–ò–¢–ï–õ–¨–ù–û–°–¢–ò
-- =====================================================

-- Master –∫–æ—à–µ–ª—å–∫–∏
CREATE INDEX IF NOT EXISTS idx_master_wallets_network ON _pidr_master_wallets(network);
CREATE INDEX IF NOT EXISTS idx_master_wallets_active ON _pidr_master_wallets(is_active);

-- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∞–¥—Ä–µ—Å–∞
CREATE INDEX IF NOT EXISTS idx_user_addresses_user_id ON _pidr_user_wallet_addresses(user_id);
CREATE INDEX IF NOT EXISTS idx_user_addresses_network ON _pidr_user_wallet_addresses(network);
CREATE INDEX IF NOT EXISTS idx_user_addresses_active ON _pidr_user_wallet_addresses(is_active);
CREATE INDEX IF NOT EXISTS idx_user_addresses_master_wallet ON _pidr_user_wallet_addresses(master_wallet_id);

-- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
CREATE INDEX IF NOT EXISTS idx_transactions_user_id ON _pidr_wallet_transactions(user_id);
CREATE INDEX IF NOT EXISTS idx_transactions_network ON _pidr_wallet_transactions(network);
CREATE INDEX IF NOT EXISTS idx_transactions_status ON _pidr_wallet_transactions(status);
CREATE INDEX IF NOT EXISTS idx_transactions_tx_hash ON _pidr_wallet_transactions(tx_hash);
CREATE INDEX IF NOT EXISTS idx_transactions_created_at ON _pidr_wallet_transactions(created_at DESC);
CREATE INDEX IF NOT EXISTS idx_transactions_user_status ON _pidr_wallet_transactions(user_id, status);

-- –ë–∞–ª–∞–Ω—Å—ã
CREATE INDEX IF NOT EXISTS idx_balances_user_id ON _pidr_user_balances(user_id);
CREATE INDEX IF NOT EXISTS idx_balances_network ON _pidr_user_balances(network);

-- –ö—É—Ä—Å—ã
CREATE INDEX IF NOT EXISTS idx_rates_currencies ON _pidr_exchange_rates(from_currency, to_currency);
CREATE INDEX IF NOT EXISTS idx_rates_active ON _pidr_exchange_rates(is_active);

-- –õ–æ–≥–∏
CREATE INDEX IF NOT EXISTS idx_logs_user_id ON _pidr_wallet_logs(user_id);
CREATE INDEX IF NOT EXISTS idx_logs_action ON _pidr_wallet_logs(action);
CREATE INDEX IF NOT EXISTS idx_logs_created_at ON _pidr_wallet_logs(created_at DESC);

-- =====================================================
-- –§–£–ù–ö–¶–ò–ò –î–õ–Ø –ê–í–¢–û–ú–ê–¢–ò–ó–ê–¶–ò–ò
-- =====================================================

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
CREATE OR REPLACE FUNCTION update_user_balance()
RETURNS TRIGGER AS $$
BEGIN
    IF TG_OP = 'INSERT' OR TG_OP = 'UPDATE' THEN
        -- –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –ø—Ä–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–∏/–∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏
        INSERT INTO _pidr_user_balances (user_id, network, total_balance, last_updated_at)
        VALUES (NEW.user_id, NEW.network, NEW.net_amount, NOW())
        ON CONFLICT (user_id, network) 
        DO UPDATE SET 
            total_balance = _pidr_user_balances.total_balance + NEW.net_amount,
            transaction_count = _pidr_user_balances.transaction_count + 1,
            last_updated_at = NOW();
        
        RETURN NEW;
    END IF;
    
    RETURN NULL;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä –¥–ª—è –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–æ–≤
DROP TRIGGER IF EXISTS trigger_update_balance ON _pidr_wallet_transactions;
CREATE TRIGGER trigger_update_balance
    AFTER INSERT OR UPDATE ON _pidr_wallet_transactions
    FOR EACH ROW
    WHEN (NEW.status = 'confirmed')
    EXECUTE FUNCTION update_user_balance();

-- –§—É–Ω–∫—Ü–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE OR REPLACE FUNCTION update_updated_at_column()
RETURNS TRIGGER AS $$
BEGIN
    NEW.updated_at = NOW();
    RETURN NEW;
END;
$$ LANGUAGE plpgsql;

-- –¢—Ä–∏–≥–≥–µ—Ä—ã –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è updated_at
CREATE TRIGGER update_master_wallets_updated_at
    BEFORE UPDATE ON _pidr_master_wallets
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_user_addresses_updated_at
    BEFORE UPDATE ON _pidr_user_wallet_addresses
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

CREATE TRIGGER update_transactions_updated_at
    BEFORE UPDATE ON _pidr_wallet_transactions
    FOR EACH ROW
    EXECUTE FUNCTION update_updated_at_column();

-- =====================================================
-- –ù–ê–ß–ê–õ–¨–ù–´–ï –î–ê–ù–ù–´–ï
-- =====================================================

-- –í—Å—Ç–∞–≤–ª—è–µ–º –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –∫—É—Ä—Å—ã –≤–∞–ª—é—Ç
INSERT INTO _pidr_exchange_rates (from_currency, to_currency, rate, source) VALUES
('BTC', 'USD', 45000.00, 'coingecko'),
('ETH', 'USD', 2500.00, 'coingecko'),
('TON', 'USD', 2.50, 'coingecko'),
('SOL', 'USD', 20.00, 'coingecko'),
('USDT', 'USD', 1.00, 'coingecko')
ON CONFLICT (from_currency, to_currency, source) DO UPDATE SET
    rate = EXCLUDED.rate,
    created_at = NOW();

-- =====================================================
-- RLS –ü–û–õ–ò–¢–ò–ö–ò (Row Level Security)
-- =====================================================

-- –í–∫–ª—é—á–∞–µ–º RLS –¥–ª—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü
ALTER TABLE _pidr_master_wallets ENABLE ROW LEVEL SECURITY;
ALTER TABLE _pidr_user_wallet_addresses ENABLE ROW LEVEL SECURITY;
ALTER TABLE _pidr_wallet_transactions ENABLE ROW LEVEL SECURITY;
ALTER TABLE _pidr_user_balances ENABLE ROW LEVEL SECURITY;
ALTER TABLE _pidr_exchange_rates ENABLE ROW LEVEL SECURITY;
ALTER TABLE _pidr_wallet_logs ENABLE ROW LEVEL SECURITY;

-- –ü–æ–ª–∏—Ç–∏–∫–∏ –¥–æ—Å—Ç—É–ø–∞ (–¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ - –æ—Ç–∫—Ä—ã—Ç—ã–π –¥–æ—Å—Ç—É–ø)
DO $$ 
BEGIN
    -- Master –∫–æ—à–µ–ª—å–∫–∏ - —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_master_wallets' AND policyname = 'Enable read for all users') THEN
        CREATE POLICY "Enable read for all users" ON _pidr_master_wallets FOR SELECT USING (true);
    END IF;
    
    -- –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –∞–¥—Ä–µ—Å–∞ - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_user_wallet_addresses' AND policyname = 'Enable all for all users') THEN
        CREATE POLICY "Enable all for all users" ON _pidr_user_wallet_addresses FOR ALL USING (true);
    END IF;
    
    -- –¢—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_wallet_transactions' AND policyname = 'Enable all for all users') THEN
        CREATE POLICY "Enable all for all users" ON _pidr_wallet_transactions FOR ALL USING (true);
    END IF;
    
    -- –ë–∞–ª–∞–Ω—Å—ã - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_user_balances' AND policyname = 'Enable all for all users') THEN
        CREATE POLICY "Enable all for all users" ON _pidr_user_balances FOR ALL USING (true);
    END IF;
    
    -- –ö—É—Ä—Å—ã - —Ç–æ–ª—å–∫–æ —á—Ç–µ–Ω–∏–µ –¥–ª—è –≤—Å–µ—Ö
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_exchange_rates' AND policyname = 'Enable read for all users') THEN
        CREATE POLICY "Enable read for all users" ON _pidr_exchange_rates FOR SELECT USING (true);
    END IF;
    
    -- –õ–æ–≥–∏ - —Ç–æ–ª—å–∫–æ –≤—Å—Ç–∞–≤–∫–∞ –¥–ª—è –≤—Å–µ—Ö
    IF NOT EXISTS (SELECT 1 FROM pg_policies WHERE tablename = '_pidr_wallet_logs' AND policyname = 'Enable insert for all users') THEN
        CREATE POLICY "Enable insert for all users" ON _pidr_wallet_logs FOR INSERT WITH CHECK (true);
    END IF;
END $$;

-- =====================================================
-- –ö–û–ú–ú–ï–ù–¢–ê–†–ò–ò –ö –¢–ê–ë–õ–ò–¶–ê–ú
-- =====================================================

COMMENT ON TABLE _pidr_master_wallets IS 'Master –∫–æ—à–µ–ª—å–∫–∏ –¥–ª—è –ø—Ä–∏–µ–º–∞ –ø–ª–∞—Ç–µ–∂–µ–π';
COMMENT ON TABLE _pidr_user_wallet_addresses IS '–£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∞–¥—Ä–µ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è –∫–∞–∂–¥–æ–π —Å–µ—Ç–∏';
COMMENT ON TABLE _pidr_wallet_transactions IS '–í—Å–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏ –≤ —Å–∏—Å—Ç–µ–º–µ –∫–æ—à–µ–ª—å–∫–æ–≤';
COMMENT ON TABLE _pidr_user_balances IS '–ë–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –ø–æ –∫–∞–∂–¥–æ–π –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–µ';
COMMENT ON TABLE _pidr_exchange_rates IS '–ê–∫—Ç—É–∞–ª—å–Ω—ã–µ –∫—É—Ä—Å—ã –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç';
COMMENT ON TABLE _pidr_wallet_logs IS '–õ–æ–≥–∏ –¥–µ–π—Å—Ç–≤–∏–π –≤ —Å–∏—Å—Ç–µ–º–µ –∫–æ—à–µ–ª—å–∫–æ–≤';

-- =====================================================
-- –ó–ê–í–ï–†–®–ï–ù–û
-- =====================================================

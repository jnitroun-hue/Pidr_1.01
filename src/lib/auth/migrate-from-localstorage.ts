// –£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö —Å localStorage –Ω–∞ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Ç–æ–ª—å–∫–æ –ø—Ä–∏ –ø–µ—Ä–≤–æ–º –∑–∞–ø—É—Å–∫–µ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

export interface LocalStorageUserData {
  id?: string;
  telegram_id?: string;
  username?: string;
  first_name?: string;
  last_name?: string;
  coins?: number;
  rating?: number;
  games_played?: number;
  games_won?: number;
}

export class LocalStorageMigration {
  
  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –≤ localStorage, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å
   */
  static hasLocalStorageData(): boolean {
    if (typeof window === 'undefined') return false;
    
    const userData = localStorage.getItem('user') || localStorage.getItem('current_user');
    const authToken = localStorage.getItem('auth_token');
    
    return !!(userData || authToken);
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage
   */
  static getLocalStorageUserData(): LocalStorageUserData | null {
    if (typeof window === 'undefined') return null;
    
    try {
      const userData = localStorage.getItem('user') || localStorage.getItem('current_user');
      if (!userData) return null;
      
      return JSON.parse(userData);
    } catch (error) {
      console.warn('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ localStorage:', error);
      return null;
    }
  }

  /**
   * –ü–æ–ª—É—á–∞–µ—Ç —Ç–æ–∫–µ–Ω –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ –∏–∑ localStorage
   */
  static getLocalStorageToken(): string | null {
    if (typeof window === 'undefined') return null;
    return localStorage.getItem('auth_token');
  }

  /**
   * –û—á–∏—â–∞–µ—Ç –≤—Å–µ –¥–∞–Ω–Ω—ã–µ P.I.D.R. –∏–∑ localStorage –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
   */
  static clearLocalStorageData(): void {
    if (typeof window === 'undefined') return;
    
    const keysToRemove = [
      'user',
      'current_user', 
      'auth_token',
      'pidr-coins',
      'pidr-purchases',
      'pidr-settings',
      'pidr-theme',
      'pidr-color-scheme',
      'lastDailyBonus',
      'pending_referral_code',
      'userAvatar',
      'wallet_transactions',
      'multiplayer_game_data'
    ];
    
    keysToRemove.forEach(key => {
      localStorage.removeItem(key);
    });
    
    console.log('‚úÖ –î–∞–Ω–Ω—ã–µ P.I.D.R. –æ—á–∏—â–µ–Ω—ã –∏–∑ localStorage');
  }

  /**
   * –ú–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ API
   */
  static async migrateUserData(userData: LocalStorageUserData): Promise<boolean> {
    try {
      const response = await fetch('/api/auth/migrate-from-localstorage', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify({
          action: 'migrate_user_data',
          userData
        })
      });

      const result = await response.json();
      
      if (result.success) {
        console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –≤ –ë–î');
        return true;
      } else {
        console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏:', result.message);
        return false;
      }
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      return false;
    }
  }

  /**
   * –ü–æ–ª–Ω–∞—è –º–∏–≥—Ä–∞—Ü–∏—è: –ø—Ä–æ–≤–µ—Ä—è–µ—Ç localStorage, –º–∏–≥—Ä–∏—Ä—É–µ—Ç –¥–∞–Ω–Ω—ã–µ, –æ—á–∏—â–∞–µ—Ç localStorage
   */
  static async performFullMigration(): Promise<{
    migrated: boolean;
    userData?: LocalStorageUserData;
    message: string;
  }> {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏
    if (!this.hasLocalStorageData()) {
      return {
        migrated: false,
        message: '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–∏–≥—Ä–∞—Ü–∏–∏ –≤ localStorage'
      };
    }

    const userData = this.getLocalStorageUserData();
    if (!userData) {
      return {
        migrated: false,
        message: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ localStorage'
      };
    }

    // –ü—ã—Ç–∞–µ–º—Å—è –º–∏–≥—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–∞–Ω–Ω—ã–µ
    const migrationSuccess = await this.migrateUserData(userData);
    
    if (migrationSuccess) {
      // –û—á–∏—â–∞–µ–º localStorage —Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏
      this.clearLocalStorageData();
      
      return {
        migrated: true,
        userData,
        message: '–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –º–∏–≥—Ä–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ localStorage –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö'
      };
    } else {
      return {
        migrated: false,
        userData,
        message: '–û—à–∏–±–∫–∞ –º–∏–≥—Ä–∞—Ü–∏–∏ –¥–∞–Ω–Ω—ã—Ö –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö'
      };
    }
  }

  /**
   * –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é –æ –º–∏–≥—Ä–∞—Ü–∏–∏
   */
  static showMigrationNotification(migrationResult: any): void {
    if (typeof window === 'undefined') return;
    
    if (migrationResult.migrated) {
      // –ú–æ–∂–Ω–æ –ø–æ–∫–∞–∑–∞—Ç—å toast –∏–ª–∏ –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
      console.log('üéâ –í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã –≤ –æ–±–ª–∞—á–Ω—É—é –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö!');
    } else if (migrationResult.userData) {
      console.warn('‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ. –û–±—Ä–∞—Ç–∏—Ç–µ—Å—å –≤ –ø–æ–¥–¥–µ—Ä–∂–∫—É.');
    }
  }
}

// –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –º–∏–≥—Ä–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
export async function autoMigrateOnAppStart(): Promise<void> {
  if (typeof window === 'undefined') return;
  
  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∞ –ª–∏ —É–∂–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –º–∏–≥—Ä–∞—Ü–∏—è
  const migrationCompleted = localStorage.getItem('migration_completed');
  if (migrationCompleted) return;
  
  try {
    const result = await LocalStorageMigration.performFullMigration();
    
    if (result.migrated) {
      localStorage.setItem('migration_completed', 'true');
      LocalStorageMigration.showMigrationNotification(result);
    }
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –º–∏–≥—Ä–∞—Ü–∏–∏:', error);
  }
}

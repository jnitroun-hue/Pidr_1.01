/**
 * üîê –ï–î–ò–ù–ê–Ø –°–ò–°–¢–ï–ú–ê HEADERS –î–õ–Ø API –ó–ê–ü–†–û–°–û–í
 * –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –¥–æ–±–∞–≤–ª—è–µ—Ç x-telegram-id –∏ x-username headers
 */

/**
 * –ü–æ–ª—É—á–∏—Ç—å headers –¥–ª—è API –∑–∞–ø—Ä–æ—Å–∞ –∏–∑ Telegram WebApp
 */
export function getApiHeaders(): HeadersInit {
  const headers: HeadersInit = {
    'Content-Type': 'application/json'
  };

  // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Telegram WebApp
  if (typeof window !== 'undefined' && window.Telegram?.WebApp) {
    const user = window.Telegram.WebApp.initDataUnsafe?.user;
    
    if (user?.id) {
      headers['x-telegram-id'] = String(user.id);
    }
    
    if (user?.username) {
      headers['x-username'] = user.username;
    }
    
    console.log('üîë [API Headers] –î–æ–±–∞–≤–ª–µ–Ω—ã headers:', {
      telegramId: headers['x-telegram-id'],
      username: headers['x-username']
    });
  } else {
    console.warn('‚ö†Ô∏è [API Headers] Telegram WebApp –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω');
  }

  return headers;
}

/**
 * –°–æ–∑–¥–∞—Ç—å fetch –∑–∞–ø—Ä–æ—Å —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º–∏ headers
 */
export async function fetchWithAuth(url: string, options: RequestInit = {}): Promise<Response> {
  const headers = {
    ...getApiHeaders(),
    ...(options.headers || {})
  };

  return fetch(url, {
    ...options,
    headers,
    credentials: 'include' // –í—Å–µ–≥–¥–∞ –≤–∫–ª—é—á–∞–µ–º credentials
  });
}


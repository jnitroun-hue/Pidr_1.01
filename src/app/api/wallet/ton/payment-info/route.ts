/**
 * ============================================================
 * TON PAYMENT INFO API
 * ============================================================
 * Endpoint –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è TON –ø–ª–∞—Ç–µ–∂–∞
 */

import { NextRequest, NextResponse } from 'next/server';
import { tonPaymentService } from '@/lib/wallets/ton-payment-service';
import { requireAuth } from '@/lib/auth-utils';

export async function GET(req: NextRequest) {
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é
    const auth = requireAuth(req);
    if (auth.error) {
      return NextResponse.json({ 
        success: false, 
        message: auth.error 
      }, { status: 401 });
    }

    const userId = auth.userId;

    console.log(`üì± –ó–∞–ø—Ä–æ—Å TON payment info –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);

    // –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞
    const paymentInfo = await tonPaymentService.getPaymentInfo(userId);

    return NextResponse.json({
      success: true,
      data: {
        coin: 'TON',
        network: 'TON',
        address: paymentInfo.address,
        memo: paymentInfo.memo,
        amount_ton: paymentInfo.amount_ton,
        amount_coins: paymentInfo.amount_coins,
        qr_url: paymentInfo.qr_url,
        rate: '1 TON = 1000 –º–æ–Ω–µ—Ç',
        min_amount: 0.1,
        instructions: [
          '1. –û—Ç–∫—Ä–æ–π—Ç–µ –≤–∞—à TON –∫–æ—à–µ–ª–µ–∫',
          '2. –û—Ç–ø—Ä–∞–≤—å—Ç–µ TON –Ω–∞ —É–∫–∞–∑–∞–Ω–Ω—ã–π –∞–¥—Ä–µ—Å',
          '3. –û–ë–Ø–ó–ê–¢–ï–õ–¨–ù–û —É–∫–∞–∂–∏—Ç–µ MEMO –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∫ –ø–µ—Ä–µ–≤–æ–¥—É',
          '4. –ú–æ–Ω–µ—Ç—ã –∑–∞—á–∏—Å–ª—è—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ç–µ—á–µ–Ω–∏–µ 1-2 –º–∏–Ω—É—Ç'
        ]
      }
    });

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è TON payment info:', error);
    return NextResponse.json({
      success: false,
      message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –¥–ª—è –ø–ª–∞—Ç–µ–∂–∞: ' + error.message
    }, { status: 500 });
  }
}


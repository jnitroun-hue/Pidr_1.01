/**
 * üßπ API: –û—á–∏—Å—Ç–∫–∞ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç
 * 
 * GET /api/rooms/cleanup
 * 
 * –£–¥–∞–ª—è–µ—Ç:
 * - –ö–æ–º–Ω–∞—Ç—ã –≤ 'waiting' —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç
 * - –ö–æ–º–Ω–∞—Ç—ã –≤ 'playing' –Ω–µ –æ–±–Ω–æ–≤–ª—è–≤—à–∏–µ—Å—è 15 –º–∏–Ω—É—Ç
 * - –ö–æ–º–Ω–∞—Ç—ã —Å—Ç–∞—Ä—à–µ 1 –¥–Ω—è (–ª—é–±—ã–µ)
 */

import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '../../../../lib/supabase';

export async function GET(req: NextRequest) {
  try {
    console.log('üßπ [cleanup] –ù–∞—á–∏–Ω–∞–µ–º –æ—á–∏—Å—Ç–∫—É –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∫–æ–º–Ω–∞—Ç...');
    
    const now = new Date();
    const fifteenMinutesAgo = new Date(now.getTime() - 15 * 60 * 1000);
    const oneDayAgo = new Date(now.getTime() - 24 * 60 * 60 * 1000);
    
    // 1. –£–¥–∞–ª—è–µ–º –∫–æ–º–Ω–∞—Ç—ã —Å—Ç–∞—Ä—à–µ 1 –¥–Ω—è
    const { data: veryOld, error: veryOldError } = await supabase
      .from('_pidr_rooms')
      .delete()
      .lt('created_at', oneDayAgo.toISOString())
      .select('id, name, room_code');
    
    console.log(`üóëÔ∏è –£–¥–∞–ª–µ–Ω–æ –∫–æ–º–Ω–∞—Ç —Å—Ç–∞—Ä—à–µ 1 –¥–Ω—è: ${veryOld?.length || 0}`);
    
    // 2. –£–¥–∞–ª—è–µ–º –∫–æ–º–Ω–∞—Ç—ã –≤ waiting —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç
    const { data: waitingOld, error: waitingError } = await supabase
      .from('_pidr_rooms')
      .delete()
      .eq('status', 'waiting')
      .lt('created_at', fifteenMinutesAgo.toISOString())
      .select('id, name, room_code');
    
    console.log(`‚è∞ –£–¥–∞–ª–µ–Ω–æ –∫–æ–º–Ω–∞—Ç –≤ waiting —Å—Ç–∞—Ä—à–µ 15 –º–∏–Ω—É—Ç: ${waitingOld?.length || 0}`);
    
    // 3. –£–¥–∞–ª—è–µ–º –∫–æ–º–Ω–∞—Ç—ã –≤ playing –Ω–µ –æ–±–Ω–æ–≤–ª—è–≤—à–∏–µ—Å—è 15 –º–∏–Ω—É—Ç
    const { data: playingInactive, error: playingError } = await supabase
      .from('_pidr_rooms')
      .delete()
      .eq('status', 'playing')
      .lt('updated_at', fifteenMinutesAgo.toISOString())
      .select('id, name, room_code');
    
    console.log(`üéÆ –£–¥–∞–ª–µ–Ω–æ –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã—Ö –∏–≥—Ä–æ–≤—ã—Ö –∫–æ–º–Ω–∞—Ç: ${playingInactive?.length || 0}`);
    
    // 4. –ü–æ–ª—É—á–∞–µ–º –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –∫–æ–º–Ω–∞—Ç—ã
    const { data: remaining, error: remainingError } = await supabase
      .from('_pidr_rooms')
      .select('id, name, room_code, status, created_at, updated_at')
      .order('created_at', { ascending: false });
    
    const totalDeleted = (veryOld?.length || 0) + (waitingOld?.length || 0) + (playingInactive?.length || 0);
    
    return NextResponse.json({
      success: true,
      deleted: {
        total: totalDeleted,
        veryOld: veryOld?.length || 0,
        waitingOld: waitingOld?.length || 0,
        playingInactive: playingInactive?.length || 0
      },
      remaining: {
        total: remaining?.length || 0,
        rooms: remaining || []
      },
      deletedRooms: {
        veryOld: veryOld || [],
        waitingOld: waitingOld || [],
        playingInactive: playingInactive || []
      }
    });
    
  } catch (error: any) {
    console.error('‚ùå [cleanup] –û—à–∏–±–∫–∞ –æ—á–∏—Å—Ç–∫–∏ –∫–æ–º–Ω–∞—Ç:', error);
    return NextResponse.json({
      success: false,
      error: error.message
    }, { status: 500 });
  }
}


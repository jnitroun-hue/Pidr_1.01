import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '../../../../lib/supabase';
import { getSessionFromRequest } from '@/lib/auth/session-utils';

// GET /api/shop/inventory - –ü–æ–ª—É—á–∏—Ç—å –∏–Ω–≤–µ–Ω—Ç–∞—Ä—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
export async function GET(req: NextRequest) {
  console.log('üì¶ GET /api/shop/inventory - –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è...');
  
  try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—é - –ë–ï–ó cookies, —Ç–æ–ª—å–∫–æ –∏–∑ localStorage —á–µ—Ä–µ–∑ headers
    const telegramIdHeader = req.headers.get('x-telegram-id');
    const usernameHeader = req.headers.get('x-username');
    
    if (!telegramIdHeader) {
      console.error('‚ùå [Shop Inventory] –ù–µ –Ω–∞–π–¥–µ–Ω x-telegram-id header');
      return NextResponse.json({ 
        success: false, 
        message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' 
      }, { status: 401 });
    }
    
    const userId = telegramIdHeader;
    console.log(`‚úÖ [Shop Inventory] –ê–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —á–µ—Ä–µ–∑ headers: ${userId}`);
    
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –ë–î –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è
    const { data, error } = await supabase.rpc('_pidr_get_user_inventory', {
      p_user_id: userId
    });
    
    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:', error);
      return NextResponse.json({ 
        success: false, 
        message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è' 
      }, { status: 500 });
    }
    
    console.log(`‚úÖ –ò–Ω–≤–µ–Ω—Ç–∞—Ä—å –∑–∞–≥—Ä—É–∂–µ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);
    
    return NextResponse.json({ 
      success: true,
      data: data || {
        skins: [],
        effects: [],
        frames: [],
        boosters: [],
        active_settings: null
      }
    });
    
  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω–≤–µ–Ω—Ç–∞—Ä—è:', error);
    return NextResponse.json({ 
      success: false, 
      message: `–û—à–∏–±–∫–∞: ${error?.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}` 
    }, { status: 500 });
  }
}


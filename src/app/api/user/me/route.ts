import { NextRequest, NextResponse } from 'next/server';
import { cookies } from 'next/headers';
import { supabase } from '../../../../lib/supabase';

// GET /api/user/me - –ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ pidr_session
export async function GET(req: NextRequest) {
  try {
    console.log('üë§ [/api/user/me] –ó–∞–ø—Ä–æ—Å –¥–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è...');

    // –ß–∏—Ç–∞–µ–º pidr_session cookie
    const cookieStore = await cookies();
    const sessionCookie = cookieStore.get('pidr_session');

    if (!sessionCookie?.value) {
      console.log('‚ùå [/api/user/me] pidr_session –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return NextResponse.json(
        { success: false, message: '–ù–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω' },
        { status: 401 }
      );
    }

    // –ü–∞—Ä—Å–∏–º —Å–µ—Å—Å–∏—é
    let sessionData: any;
    try {
      sessionData = JSON.parse(sessionCookie.value);
    } catch (parseError) {
      console.error('‚ùå [/api/user/me] –û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ —Å–µ—Å—Å–∏–∏:', parseError);
      return NextResponse.json(
        { success: false, message: '–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å–µ—Å—Å–∏—è' },
        { status: 401 }
      );
    }

    // –ò–∑–≤–ª–µ–∫–∞–µ–º userId –∏–∑ —Å–µ—Å—Å–∏–∏
    const userId =
      sessionData.userId ||
      sessionData.user_id ||
      sessionData.telegramId ||
      sessionData.telegram_id ||
      sessionData.id;

    if (!userId) {
      console.log('‚ùå [/api/user/me] userId –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ—Å—Å–∏–∏');
      return NextResponse.json(
        { success: false, message: '–ù–µ–≤–∞–ª–∏–¥–Ω–∞—è —Å–µ—Å—Å–∏—è' },
        { status: 401 }
      );
    }

    console.log('‚úÖ [/api/user/me] userId –∏–∑ —Å–µ—Å—Å–∏–∏:', userId);

    // –ò—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ë–î
    const { data: user, error } = await supabase
      .from('_pidr_users')
      .select('*')
      .eq('id', userId)
      .single();

    if (error || !user) {
      console.error('‚ùå [/api/user/me] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î:', error);
      return NextResponse.json(
        { success: false, message: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ë–î' },
        { status: 404 }
      );
    }

    console.log('‚úÖ [/api/user/me] –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–∞–π–¥–µ–Ω:', user.username);

    // –û–±–Ω–æ–≤–ª—è–µ–º last_seen
    await supabase
      .from('_pidr_users')
      .update({
        last_seen: new Date().toISOString(),
        status: 'online'
      })
      .eq('id', userId);

    return NextResponse.json({
      success: true,
      user: {
        id: user.id,
        username: user.username,
        firstName: user.first_name,
        lastName: user.last_name,
        avatar_url: user.avatar_url,
        telegramId: user.telegram_id,
        coins: user.coins,
        rating: user.rating,
        gamesPlayed: user.games_played,
        gamesWon: user.games_won,
        status: user.status
      }
    });
  } catch (error: any) {
    console.error('‚ùå [/api/user/me] –û—à–∏–±–∫–∞:', error);
    return NextResponse.json(
      { success: false, message: '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}


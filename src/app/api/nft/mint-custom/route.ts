import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '../../../../lib/supabase';
import { requireAuth } from '../../../../lib/auth-utils';

/**
 * POST /api/nft/mint-custom
 * –ö–∞—Å—Ç–æ–º–Ω–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è NFT –∫–∞—Ä—Ç—ã (3 TON –∫–æ–º–∏—Å—Å–∏—è)
 * –ò–≥—Ä–æ–∫ –≤—ã–±–∏—Ä–∞–µ—Ç –º–∞—Å—Ç—å, —Ä–∞–Ω–≥, —Å—Ç–∏–ª—å –∏ –º–æ–∂–µ—Ç –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ
 */
export async function POST(req: NextRequest) {
  try {
    const userId = await requireAuth(req);
    console.log(`üé® –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç –∫–∞—Å—Ç–æ–º–Ω—É—é –≥–µ–Ω–µ—Ä–∞—Ü–∏—é NFT...`);

    const { 
      wallet_address, 
      card_rank, 
      card_suit, 
      custom_style, 
      custom_image_url 
    } = await req.json();

    if (!wallet_address || !card_rank || !card_suit) {
      return NextResponse.json(
        { success: false, message: 'wallet_address, card_rank –∏ card_suit –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã' },
        { status: 400 }
      );
    }

    // –í–∞–ª–∏–¥–∞—Ü–∏—è —Ä–∞–Ω–≥–∞ –∏ –º–∞—Å—Ç–∏
    const validRanks = ['2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A'];
    const validSuits = ['hearts', 'diamonds', 'clubs', 'spades'];

    if (!validRanks.includes(card_rank) || !validSuits.includes(card_suit)) {
      return NextResponse.json(
        { success: false, message: '–ù–µ–≤–µ—Ä–Ω—ã–π —Ä–∞–Ω–≥ –∏–ª–∏ –º–∞—Å—Ç—å –∫–∞—Ä—Ç—ã' },
        { status: 400 }
      );
    }

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∫–æ—à–µ–ª–µ–∫ –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    const { data: walletCheck, error: walletError } = await supabase
      .from('_pidr_player_wallets')
      .select('id')
      .eq('user_id', userId)
      .eq('wallet_address', wallet_address)
      .single();

    if (walletError || !walletCheck) {
      return NextResponse.json(
        { success: false, message: '–ö–æ—à–µ–ª–µ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω' },
        { status: 403 }
      );
    }

    // –ù–∞—Ö–æ–¥–∏–º –±–∞–∑–æ–≤—É—é –∫–∞—Ä—Ç—É –≤ –ë–î
    const card_id = `${card_rank.toLowerCase()}_of_${card_suit}`;
    const { data: baseCard, error: cardError } = await supabase
      .from('_pidr_nft_cards')
      .select('*')
      .eq('card_id', card_id)
      .single();

    if (cardError || !baseCard) {
      return NextResponse.json(
        { success: false, message: '–ö–∞—Ä—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ –±–∞–∑–µ' },
        { status: 404 }
      );
    }

    // –†–µ–∑–µ—Ä–≤–∏—Ä—É–µ–º –º–∏–Ω—Ç
    const mintPrice = 3.0; // –§–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const commission = 3.0; // –í—Å—è —Å—É–º–º–∞ –∏–¥–µ—Ç –Ω–∞ –º–∞—Å—Ç–µ—Ä-–∫–æ—à–µ–ª–µ–∫
    const masterWalletAddress = process.env.MASTER_TON_ADDRESS || '';

    const { data: mintHistory, error: mintError } = await supabase
      .from('_pidr_nft_mint_history')
      .insert({
        user_id: userId,
        card_id: baseCard.card_id,
        wallet_address,
        nft_address: '', // –ë—É–¥–µ—Ç –∑–∞–ø–æ–ª–Ω–µ–Ω–æ –ø–æ—Å–ª–µ –º–∏–Ω—Ç–∞
        mint_type: 'custom',
        mint_price_ton: mintPrice,
        commission_paid_ton: commission,
        master_wallet_address: masterWalletAddress,
        transaction_hash: '',
        status: 'pending',
        metadata: {
          custom_style: custom_style || 'default',
          custom_image_url: custom_image_url || null,
          card_rank,
          card_suit
        }
      })
      .select()
      .single();

    if (mintError) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –º–∏–Ω—Ç–∞:', mintError);
      return NextResponse.json(
        { success: false, message: '–û—à–∏–±–∫–∞ —Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏–Ω—Ç–∞' },
        { status: 500 }
      );
    }

    console.log(`‚úÖ –ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∞ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–∞: ${baseCard.card_name} (—Å—Ç–∏–ª—å: ${custom_style || 'default'})`);
    
    return NextResponse.json({
      success: true,
      mint_id: mintHistory.id,
      card: {
        card_id: baseCard.card_id,
        card_name: baseCard.card_name,
        card_rank: baseCard.card_rank,
        card_suit: baseCard.card_suit,
        rarity: baseCard.rarity,
        image_url: custom_image_url || baseCard.image_url,
        custom_style: custom_style || 'default'
      },
      mint_price_ton: mintPrice,
      commission_ton: commission,
      master_wallet_address: masterWalletAddress,
      message: `–ö–∞—Å—Ç–æ–º–Ω–∞—è –∫–∞—Ä—Ç–∞ ${baseCard.card_name} –≥–æ—Ç–æ–≤–∞ –∫ –º–∏–Ω—Ç—É! –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏—é.`
    });

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API –∫–∞—Å—Ç–æ–º–Ω–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ NFT:', error);
    return NextResponse.json(
      { success: false, message: error.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 401 }
    );
  }
}


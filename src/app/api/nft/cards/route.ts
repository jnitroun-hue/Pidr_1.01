import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '../../../../../lib/supabase';

/**
 * GET /api/nft/cards
 * –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –¥–æ—Å—Ç—É–ø–Ω—ã—Ö NFT –∫–∞—Ä—Ç –¥–ª—è –º–∏–Ω—Ç–∞
 */
export async function GET(req: NextRequest) {
  try {
    const { searchParams } = new URL(req.url);
    const rarity = searchParams.get('rarity');
    const suit = searchParams.get('suit');

    console.log(`üìã –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ NFT –∫–∞—Ä—Ç (rarity: ${rarity}, suit: ${suit})...`);

    let query = supabase
      .from('_pidr_nft_cards')
      .select('*')
      .order('rarity', { ascending: false })
      .order('card_rank', { ascending: true });

    if (rarity) {
      query = query.eq('rarity', rarity);
    }

    if (suit) {
      query = query.eq('card_suit', suit);
    }

    const { data: cards, error } = await query;

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç:', error);
      return NextResponse.json(
        { success: false, message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç' },
        { status: 500 }
      );
    }

    return NextResponse.json({
      success: true,
      cards: cards || [],
      total: cards?.length || 0
    });

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API –ø–æ–ª—É—á–µ–Ω–∏—è –∫–∞—Ä—Ç:', error);
    return NextResponse.json(
      { success: false, message: error.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 500 }
    );
  }
}


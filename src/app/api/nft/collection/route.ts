import { NextRequest, NextResponse } from 'next/server';
import { supabase } from '@/lib/supabase';
import { getSessionFromRequest } from '@/lib/auth/session-utils';

/**
 * GET /api/nft/collection
 * –ü–æ–ª—É—á–∏—Ç—å NFT –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 */
export async function GET(req: NextRequest) {
  try {
    // ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Å—Å–∏–∏ —á–µ—Ä–µ–∑ cookies
    const session = getSessionFromRequest(req);
    
    if (!session || !session.telegramId) {
      console.error('‚ùå [collection] –°–µ—Å—Å–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞');
      return NextResponse.json(
        { success: false, message: '–¢—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è' },
        { status: 401 }
      );
    }

    const userId = session.telegramId;
    console.log(`üì¶ –ü–æ–ª—É—á–∞–µ–º NFT –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}...`);

    // –í—ã–∑—ã–≤–∞–µ–º SQL —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    const { data, error } = await supabase.rpc('get_user_nft_collection', {
      p_user_id: userId
    });

    if (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', error);
      return NextResponse.json(
        { success: false, message: '–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏' },
        { status: 500 }
      );
    }

    const collection = data || [];
    console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${collection.length} NFT –∫–∞—Ä—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}`);

    return NextResponse.json({
      success: true,
      collection,
      total: collection.length
    });

  } catch (error: any) {
    console.error('‚ùå –û—à–∏–±–∫–∞ API –ø–æ–ª—É—á–µ–Ω–∏—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏:', error);
    return NextResponse.json(
      { success: false, message: error.message || '–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞' },
      { status: 401 }
    );
  }
}


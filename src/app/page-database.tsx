"use client";

import { useState, useEffect } from 'react';
import { useRouter } from 'next/navigation';
import { User } from '../types/game';
import { useTelegram } from '../hooks/useTelegram';
import NeonMainMenu from '../components/main_menu_component';

/**
 * –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ —Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–µ–π –¢–û–õ–¨–ö–û —á–µ—Ä–µ–∑ –ë–î
 * –ù–∏–∫–∞–∫–æ–≥–æ localStorage - —Ç–æ–ª—å–∫–æ HTTP cookies –∏ –ë–î —Å–µ—Å—Å–∏–∏
 */
function HomeWithParams() {
  const [user, setUser] = useState<User | null>(null);
  const [loading, setLoading] = useState(true);
  const { telegramUser, telegramId } = useTelegram();
  const router = useRouter();

  useEffect(() => {
    console.log('üéÆ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¶–ò–Ø –ò–ì–†–´ - –ü–†–û–í–ï–†–ö–ê –°–ï–°–°–ò–ò –í –ë–î');
    
    const initializePlayer = async () => {
      // –ü—Ä–æ–≤–µ—Ä—è–µ–º —á—Ç–æ –º—ã –≤ –±—Ä–∞—É–∑–µ—Ä–µ
      if (typeof window === 'undefined') {
        setLoading(false);
        return;
      }

      // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –≤ –ë–î
      console.log('üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –∞–∫—Ç–∏–≤–Ω—É—é —Å–µ—Å—Å–∏—é –≤ –ë–î...');
      
      try {
        const sessionResponse = await fetch('/api/auth', {
          method: 'GET',
          credentials: 'include' // –í–∞–∂–Ω–æ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ cookies
        });

        if (sessionResponse.ok) {
          const sessionData = await sessionResponse.json();
          
          if (sessionData.success && sessionData.user) {
            console.log('‚úÖ –ù–∞–π–¥–µ–Ω–∞ –∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è –≤ –ë–î:', sessionData.user);
            
            const existingUser: User = {
              id: sessionData.user.id,
              username: sessionData.user.username,
              firstName: sessionData.user.firstName || sessionData.user.username,
              lastName: sessionData.user.lastName || '',
              telegramId: sessionData.user.telegramId || '',
              coins: sessionData.user.coins || 1000,
              rating: sessionData.user.rating || 0,
              gamesPlayed: sessionData.user.gamesPlayed || 0,
              gamesWon: sessionData.user.gamesWon || 0,
              photoUrl: sessionData.user.avatar
            };
            
            setUser(existingUser);
            setLoading(false);
            
            // –î–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–Ω–µ—Ç
            window.dispatchEvent(new CustomEvent('coinsUpdated', { 
              detail: { coins: existingUser.coins } 
            }));
            
            console.log('üöÄ –ò–ì–†–ê –ì–û–¢–û–í–ê –ö –ó–ê–ü–£–°–ö–£ (–∞–∫—Ç–∏–≤–Ω–∞—è —Å–µ—Å—Å–∏—è)!');
            return;
          }
        }

        console.log('‚ùå –ê–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏ –Ω–µ—Ç, —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');

      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–µ—Å—Å–∏–∏:', error);
      }

      // –ï—Å–ª–∏ –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–π —Å–µ—Å—Å–∏–∏, –ø—ã—Ç–∞–µ–º—Å—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è
      if (telegramId && telegramUser) {
        console.log('üì± Telegram –¥–∞–Ω–Ω—ã–µ –Ω–∞–π–¥–µ–Ω—ã, –∞–≤—Ç–æ—Ä–∏–∑—É–µ–º—Å—è —á–µ—Ä–µ–∑ –ë–î');
        await createUserThroughDatabase(telegramUser, telegramId);
      } else {
        console.log('‚ùå –ù–µ—Ç Telegram –¥–∞–Ω–Ω—ã—Ö, –Ω—É–∂–Ω–∞ —Ä—É—á–Ω–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è');
        setLoading(false);
      }
    };
    
    const createUserThroughDatabase = async (telegramUser: any | undefined, telegramId: string) => {
      console.log('üåê –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è —á–µ—Ä–µ–∑ –ë–î...');
      
      const authData = {
        type: 'telegram',
        id: telegramId,
        username: telegramUser?.username || '',
        first_name: telegramUser?.first_name || '–ò–≥—Ä–æ–∫',
        last_name: telegramUser?.last_name || '',
        photo_url: telegramUser?.photo_url || null
      };
      
      try {
        const response = await fetch('/api/auth', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          credentials: 'include', // –í–∞–∂–Ω–æ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è cookies
          body: JSON.stringify(authData)
        });
        
        if (!response.ok) {
          throw new Error(`API –æ—Ç–≤–µ—Ç–∏–ª —Å –æ—à–∏–±–∫–æ–π: ${response.status}`);
        }
        
        const result = await response.json();
        
        if (result.success && result.user) {
          console.log('‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω —á–µ—Ä–µ–∑ –ë–î:', result.user);
          
          const newUser: User = {
            id: result.user.id,
            username: result.user.username,
            firstName: result.user.firstName || result.user.username,
            lastName: result.user.lastName || '',
            telegramId: result.user.telegramId || telegramId,
            coins: result.user.coins || 1000,
            rating: result.user.rating || 0,
            gamesPlayed: result.user.gamesPlayed || 0,
            gamesWon: result.user.gamesWon || 0,
            photoUrl: result.user.avatar
          };
          
          setUser(newUser);
          setLoading(false);
          
          // –î–∏—Å–ø–∞—Ç—á–∏–º —Å–æ–±—ã—Ç–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –º–æ–Ω–µ—Ç
          window.dispatchEvent(new CustomEvent('coinsUpdated', { 
            detail: { coins: newUser.coins } 
          }));
          
          console.log('üöÄ –ò–ì–†–ê –ì–û–¢–û–í–ê –ö –ó–ê–ü–£–°–ö–£ (–Ω–æ–≤–∞—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è)!');
        } else {
          throw new Error(result.message || '–ù–µ —É–¥–∞–ª–æ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞—Ç—å—Å—è');
        }
        
      } catch (error) {
        console.error('‚ùå –û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —á–µ—Ä–µ–∑ –ë–î:', error);
        setLoading(false);
      }
    };

    initializePlayer();
  }, [telegramUser, telegramId]);

  // –§—É–Ω–∫—Ü–∏—è –≤—ã—Ö–æ–¥–∞
  const handleLogout = async () => {
    try {
      await fetch('/api/auth', {
        method: 'DELETE',
        credentials: 'include'
      });
      
      setUser(null);
      console.log('‚úÖ –í—ã—Ö–æ–¥ –≤—ã–ø–æ–ª–Ω–µ–Ω');
      
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã—Ö–æ–¥–∞:', error);
    }
  };

  if (loading) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 flex items-center justify-center">
        <div className="text-center">
          <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-white mx-auto mb-4"></div>
          <h2 className="text-2xl font-bold text-white mb-2">–ó–∞–≥—Ä—É–∑–∫–∞ –∏–≥—Ä—ã...</h2>
          <p className="text-blue-200">–ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–µ—Å—Å–∏—é –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>
        </div>
      </div>
    );
  }

  if (!user) {
    return (
      <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 flex items-center justify-center">
        <div className="text-center bg-black/30 backdrop-blur-md rounded-xl p-8 border border-white/20">
          <h2 className="text-3xl font-bold text-white mb-4">P.I.D.R. Game</h2>
          <p className="text-blue-200 mb-6">–î–ª—è –∏–≥—Ä—ã —Ç—Ä–µ–±—É–µ—Ç—Å—è –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è</p>
          
          <div className="space-y-4">
            <button
              onClick={() => router.push('/auth/login')}
              className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-colors"
            >
              –í–æ–π—Ç–∏
            </button>
            
            <button
              onClick={() => router.push('/auth/register')}
              className="w-full bg-green-600 hover:bg-green-700 text-white font-bold py-3 px-6 rounded-lg transition-colors"
            >
              –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è
            </button>
          </div>
          
          <div className="mt-6 text-sm text-gray-300">
            <p>üîí –í—Å–µ –¥–∞–Ω–Ω—ã–µ —Ö—Ä–∞–Ω—è—Ç—Å—è –≤ –∑–∞—â–∏—â–µ–Ω–Ω–æ–π –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö</p>
            <p>üö´ –ù–∏–∫–∞–∫–æ–≥–æ localStorage</p>
          </div>
        </div>
      </div>
    );
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900">
      <NeonMainMenu 
        user={user} 
        onLogout={handleLogout}
      />
    </div>
  );
}

export default function HomePage() {
  return <HomeWithParams />;
}

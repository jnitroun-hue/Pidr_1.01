'use client';

import { useState, useEffect } from 'react';
import { CanvasImageGenerator } from '@/lib/image-generation/canvas-generator';

/**
 * üé¥ –¢–ï–°–¢–û–í–ê–Ø –°–¢–†–ê–ù–ò–¶–ê –î–õ–Ø –ì–ï–ù–ï–†–ê–¶–ò–ò –ö–ê–†–¢
 * –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–±–æ—Ç—É Canvas –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ –∫–∞—Ä—Ç
 */

type CardSuit = 'hearts' | 'diamonds' | 'clubs' | 'spades';
type CardStyle = 'classic' | 'neon' | 'minimal';

interface GeneratedCard {
  suit: CardSuit;
  value: string;
  style: CardStyle;
  imageUrl: string;
  timestamp: number;
}

export default function TestCardsPage() {
  const [generator, setGenerator] = useState<CanvasImageGenerator | null>(null);
  const [generatedCards, setGeneratedCards] = useState<GeneratedCard[]>([]);
  const [isGenerating, setIsGenerating] = useState(false);
  const [selectedStyle, setSelectedStyle] = useState<CardStyle>('classic');

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞
  useEffect(() => {
    if (typeof window !== 'undefined') {
      const canvasGen = new CanvasImageGenerator();
      setGenerator(canvasGen);
      console.log('üé® Canvas –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
    }
  }, []);

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ–¥–Ω–æ–π –∫–∞—Ä—Ç—ã
  const generateSingleCard = async (suit: CardSuit, value: string, style: CardStyle) => {
    if (!generator) {
      console.error('‚ùå –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
      return;
    }

    setIsGenerating(true);
    try {
      console.log(`üé¥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É: ${value} ${suit} (${style})`);
      const imageUrl = await generator.generateCard(suit, value, style);
      
      const newCard: GeneratedCard = {
        suit,
        value,
        style,
        imageUrl,
        timestamp: Date.now()
      };

      setGeneratedCards(prev => [newCard, ...prev.slice(0, 11)]); // –û—Å—Ç–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ 12 –∫–∞—Ä—Ç
      console.log('‚úÖ –ö–∞—Ä—Ç–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç—ã:', error);
    } finally {
      setIsGenerating(false);
    }
  };

  // –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–ª–Ω–æ–π –∫–æ–ª–æ–¥—ã
  const generateFullDeck = async () => {
    if (!generator) return;

    setIsGenerating(true);
    setGeneratedCards([]);

    const suits: CardSuit[] = ['hearts', 'diamonds', 'clubs', 'spades'];
    const values = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'];
    
    try {
      console.log('üéØ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –ø–æ–ª–Ω—É—é –∫–æ–ª–æ–¥—É...');
      const cards: GeneratedCard[] = [];

      for (const suit of suits) {
        for (const value of values) {
          const imageUrl = await generator.generateCard(suit, value, selectedStyle);
          cards.push({
            suit,
            value,
            style: selectedStyle,
            imageUrl,
            timestamp: Date.now()
          });

          // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞
          await new Promise(resolve => setTimeout(resolve, 50));
        }
      }

      setGeneratedCards(cards);
      console.log('‚úÖ –ü–æ–ª–Ω–∞—è –∫–æ–ª–æ–¥–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞!');
    } catch (error) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–æ–ª–æ–¥—ã:', error);
    } finally {
      setIsGenerating(false);
    }
  };

  // –û—á–∏—Å—Ç–∫–∞ –∫–∞—Ä—Ç
  const clearCards = () => {
    setGeneratedCards([]);
    console.log('üóëÔ∏è –ö–∞—Ä—Ç—ã –æ—á–∏—â–µ–Ω—ã');
  };

  const suitSymbols = {
    hearts: '‚ô•Ô∏è',
    diamonds: '‚ô¶Ô∏è',
    clubs: '‚ô£Ô∏è',
    spades: '‚ô†Ô∏è'
  };

  const suitNames = {
    hearts: '–ß–µ—Ä–≤—ã',
    diamonds: '–ë—É–±–Ω—ã',
    clubs: '–¢—Ä–µ—Ñ—ã',
    spades: '–ü–∏–∫–∏'
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 p-4">
      <div className="max-w-7xl mx-auto">
        {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
        <div className="text-center mb-8">
          <h1 className="text-4xl font-bold text-white mb-2">
            üé¥ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–∞—Ä—Ç
          </h1>
          <p className="text-gray-300">
            Canvas –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –∫–∞—Ä—Ç –¥–ª—è Telegram –∏–≥—Ä—ã
          </p>
        </div>

        {/* –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
        <div className="bg-black/30 backdrop-blur-lg rounded-2xl p-6 mb-8 border border-purple-500/20">
          <div className="flex flex-wrap items-center gap-4 mb-6">
            {/* –í—ã–±–æ—Ä —Å—Ç–∏–ª—è */}
            <div className="flex items-center gap-2">
              <label className="text-white font-medium">–°—Ç–∏–ª—å:</label>
              <select
                value={selectedStyle}
                onChange={(e) => setSelectedStyle(e.target.value as CardStyle)}
                className="bg-gray-800 text-white px-3 py-2 rounded-lg border border-gray-600 focus:border-purple-500 focus:outline-none"
                disabled={isGenerating}
              >
                <option value="classic">–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π</option>
                <option value="neon">–ù–µ–æ–Ω</option>
                <option value="minimal">–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π</option>
              </select>
            </div>

            {/* –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è */}
            <div className="flex gap-2">
              <button
                onClick={generateFullDeck}
                disabled={isGenerating || !generator}
                className="bg-gradient-to-r from-purple-600 to-blue-600 hover:from-purple-700 hover:to-blue-700 disabled:from-gray-600 disabled:to-gray-700 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 disabled:cursor-not-allowed"
              >
                {isGenerating ? '‚è≥ –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º...' : 'üéØ –ü–æ–ª–Ω–∞—è –∫–æ–ª–æ–¥–∞'}
              </button>
              
              <button
                onClick={clearCards}
                disabled={isGenerating}
                className="bg-red-600 hover:bg-red-700 disabled:bg-gray-600 text-white px-4 py-2 rounded-lg font-medium transition-all duration-200 disabled:cursor-not-allowed"
              >
                üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å
              </button>
            </div>
          </div>

          {/* –ë—ã—Å—Ç—Ä–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –∫–∞—Ä—Ç */}
          <div className="grid grid-cols-2 md:grid-cols-4 gap-4">
            {(['hearts', 'diamonds', 'clubs', 'spades'] as CardSuit[]).map((suit) => (
              <div key={suit} className="text-center">
                <h3 className="text-white font-medium mb-2">
                  {suitSymbols[suit]} {suitNames[suit]}
                </h3>
                <div className="flex flex-wrap gap-1 justify-center">
                  {['A', 'K', 'Q', 'J'].map((value) => (
                    <button
                      key={`${suit}-${value}`}
                      onClick={() => generateSingleCard(suit, value, selectedStyle)}
                      disabled={isGenerating || !generator}
                      className="bg-gray-700 hover:bg-gray-600 disabled:bg-gray-800 text-white px-2 py-1 rounded text-sm font-medium transition-all duration-200 disabled:cursor-not-allowed"
                    >
                      {value}
                    </button>
                  ))}
                </div>
              </div>
            ))}
          </div>
        </div>

        {/* –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ */}
        <div className="bg-black/30 backdrop-blur-lg rounded-2xl p-4 mb-8 border border-purple-500/20">
          <div className="flex flex-wrap items-center justify-between gap-4">
            <div className="text-white">
              <span className="font-medium">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∫–∞—Ä—Ç:</span> {generatedCards.length}
            </div>
            <div className="text-white">
              <span className="font-medium">–°—Ç–∞—Ç—É—Å –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞:</span>{' '}
              <span className={generator ? 'text-green-400' : 'text-red-400'}>
                {generator ? '‚úÖ –ì–æ—Ç–æ–≤' : '‚ùå –ù–µ –≥–æ—Ç–æ–≤'}
              </span>
            </div>
            <div className="text-white">
              <span className="font-medium">–¢–µ–∫—É—â–∏–π —Å—Ç–∏–ª—å:</span>{' '}
              <span className="text-purple-400 font-medium">
                {selectedStyle === 'classic' ? '–ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π' :
                 selectedStyle === 'neon' ? '–ù–µ–æ–Ω' : '–ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π'}
              </span>
            </div>
          </div>
        </div>

        {/* –ì–∞–ª–µ—Ä–µ—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∫–∞—Ä—Ç */}
        {generatedCards.length > 0 && (
          <div className="bg-black/30 backdrop-blur-lg rounded-2xl p-6 border border-purple-500/20">
            <h2 className="text-2xl font-bold text-white mb-4">
              üé® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç—ã
            </h2>
            
            <div className="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 xl:grid-cols-8 gap-4">
              {generatedCards.map((card, index) => (
                <div key={`${card.suit}-${card.value}-${card.timestamp}`} className="group">
                  <div className="bg-gray-800/50 rounded-xl p-3 border border-gray-600/30 hover:border-purple-500/50 transition-all duration-300 hover:scale-105">
                    {/* –ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã */}
                    <div className="aspect-[3/4] mb-2 rounded-lg overflow-hidden bg-gray-900/50">
                      <img
                        src={card.imageUrl}
                        alt={`${card.value} of ${card.suit}`}
                        className="w-full h-full object-contain"
                        loading="lazy"
                      />
                    </div>
                    
                    {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ */}
                    <div className="text-center">
                      <div className="text-white font-medium text-sm">
                        {card.value} {suitSymbols[card.suit]}
                      </div>
                      <div className="text-gray-400 text-xs">
                        {card.style}
                      </div>
                    </div>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {/* –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ */}
        <div className="bg-black/30 backdrop-blur-lg rounded-2xl p-6 mt-8 border border-purple-500/20">
          <h2 className="text-xl font-bold text-white mb-4">üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</h2>
          <div className="text-gray-300 space-y-2">
            <p>‚Ä¢ <strong>–ü–æ–ª–Ω–∞—è –∫–æ–ª–æ–¥–∞:</strong> –ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –≤—Å–µ 52 –∫–∞—Ä—Ç—ã –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º —Å—Ç–∏–ª–µ</p>
            <p>‚Ä¢ <strong>–û—Ç–¥–µ–ª—å–Ω—ã–µ –∫–∞—Ä—Ç—ã:</strong> –ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∑–Ω–∞—á–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</p>
            <p>‚Ä¢ <strong>–°—Ç–∏–ª–∏:</strong> –ö–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π (–±–µ–ª—ã–π —Ñ–æ–Ω), –ù–µ–æ–Ω (—Ç–µ–º–Ω—ã–π + —Å–≤–µ—á–µ–Ω–∏–µ), –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π (–ø—Ä–æ—Å—Ç–æ–π)</p>
            <p>‚Ä¢ <strong>–†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç:</strong> 180x240px - –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ –¥–ª—è –∏–≥—Ä—ã</p>
            <p>‚Ä¢ <strong>–§–æ—Ä–º–∞—Ç:</strong> PNG —Å –ø—Ä–æ–∑—Ä–∞—á–Ω–æ—Å—Ç—å—é, –≥–æ—Ç–æ–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∏–≥—Ä–µ</p>
          </div>
        </div>
      </div>
    </div>
  );
}
